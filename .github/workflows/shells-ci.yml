name: CI

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types: [published]

jobs:
  pre-commit:
    name: Run pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install pip -U
          pip install -r requirements-ci.txt
      - name: Run pre-commit
        run: |
          export PYTHONPATH=src
          pre-commit install
          pre-commit run --files src/stc_driver.py
  pack:
    name: Pack the Shell
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install pip -U
          pip install shellfoundry
      - name: Build
        run: shellfoundry pack
  check-version:
    name: Check version
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          sudo apt-get -y install jq
          pip install yq
      - name: Check version
        run: |
          git clone https://github.com/${{ github.repository }}.git ${{ github.event.repository.name }}
          cd ${{ github.event.repository.name }}
          git checkout -qf ${{ github.head_ref }}
          echo "Check that shell version increased"
          current_version=$(git describe --tags --abbrev=0)
          echo "Current shell version $current_version"
          new_version=$(yq .metadata.template_version shell-definition.yaml)
          new_version=${new_version:1:-1}
          echo "New shell version $new_version"
          if [[ $current_version < $new_version ]]
          then
            exit 0
          fi
          echo "New shell version $new_version must be greater then $current_version"
          exit 1
  create-gh-release:
    needs: [pre-commit, pack, check-version]
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          sudo apt-get -y install jq
          python -m pip install pip -U
          python -m pip install cloudshell-pip-download yq
          pip install shellfoundry
      - name: Build
        run: shellfoundry pack
      - name: Pack and download dependencies
        run: |
          pip-download -r src/requirements.txt -p win32 -py cp39 --to-archive dist/dependencies-win32.zip
          pip-download -r src/requirements.txt -p linux -py cp39 --to-archive dist/dependencies-linux.zip
      - name: Set envs
        run: |
          version="$(yq -r .metadata.template_version shell-definition.yaml)"
          repo_owner=${{ github.repository }}
          index=`expr index "$repo_owner" /`
          repo=${repo_owner:index}
          echo "TAG=$version" >> $GITHUB_ENV
          echo "REPO=$repo" >> $GITHUB_ENV
      - name: Rename dependencies
        run: |
          mv dist/dependencies-win32.zip dist/cloudshell-$REPO-dependencies-win32-package-$TAG.zip
          mv dist/dependencies-linux.zip dist/cloudshell-$REPO-dependencies-linux-package-$TAG.zip
      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "dist/*"
          draft: true
          name: ${{ env.REPO }} ${{ env.TAG }}
          tag: ${{ env.TAG }}
          commit: master
